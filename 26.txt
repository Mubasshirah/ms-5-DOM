**browser e html file ta dom e rupantorito hoa.fole js sob html element ke access korte pare,tader manipulate korte pare.
**what js can do using dom:
     1.use html element
     2.change css style
     3.create html element
     4.remove html element
     5.change html attribute
     6.add event

**dom tree is made of nodes.every html element in dom tree is node
    *parentNode,childNode,nextSibling,previousSibling

**dom method: ati dara amra js dara html element guloke manipulate(add,delete,create,remove,) korte pari.
-> some dom methods:
getElementsByTagName
getElementById
getElementsByClassName
querySelector
appenChild
createElement

**dom events:
           DOM (Document Object Model) Events are a signal that something has occurred, or is occurring, and can be triggered by user interactions or by the browser.
           An event is any action which takes place in the DOM (for all intents and purposes this means the browser window). An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task

**common dom event:
  1.onClick
  2.click



  **onclick:
option-1:
<button onclick="(console.log('i am event'))">click me</button>
option-2:
<button onclick="makeRed()">make red</button>
<button onclick="removeRed()">remove red</button>
<script>
function makeRed(){
    document.body.style.backgroundColor='red';
}
function removeRed(){
    document.body.style.backgroundColor='';
}
</script>
~~~>>>jokhon script or external js file e onclick event add kora hoa:
option-3:
<button id="blue">make blue</button>
const makeBlue=document.getElementById('blue');
makeBlue.onclick=makeblue;
function makeblue(){
    document.body.style.backgroundColor='blue';
}
option-4:
<button id="pink">make pink</button>
const makePink=document.getElementById('pink');
makePink.addEventListener('click', function makepink(){
               document.body.style.backgroundColor='pink';
})
option-5:(most used)
example-1:
<button id="violet">make violet</button>
document.getElementById('violet').addEventListener('click', function makeViolet(){
    document.body.style.backgroundColor='violet';
})
example-2:
    <h2 id="defaultText">Default text</h2>
document.getElementById('changeDefaultText').addEventListener('click',function(){
    const defaultText=document.getElementById('defaultText');
    defaultText.innerText='i have changed the default text';
})
example-3:(change text by clicking)
document.getElementById('inputButton').addEventListener('click',function(){
    const inputtext=document.getElementById('inputText');
    const inputtextvalue=inputtext.value;
    const seconddefault=document.getElementById('secondDefault');
    // seconddefault.innerText='second default text has been changed';
    seconddefault.innerText=inputtextvalue;
    inputtext.value ='';

})

exemple-4:(add new comment)
document.getElementById('buttonForPost').addEventListener('click',function(){
    const textArea=document.getElementById('newComment');
    const textAreaValue=textArea.value;
    const commentsection=document.getElementById('commentSection');
    const p=document.createElement('p');
    p.innerText=textAreaValue;
    commentsection.appendChild(p);
    textArea.value='';
})

**some more events:
1.mouseenter
2.mousemove
3.focus
4.blur

**keyup,keydown,keypress:
The keydown event is triggered first when user presses a key
The keyup event is triggered last when user releases a key
In between, the keypress event is triggered

****input field e ki likhtesi seta bujha jnno keyup event dia uchid.karon onno duitar khetre instant dekhayna .akta pore pore dekhay. 

example-5:(text delete after inputing a text "delete"in input field)
document.getElementById('inputedText').addEventListener('keyup',function(event){
    const inputedtext=event.target.value;
    const deleteButton=document.getElementById('deleteButton');
    if(inputedtext=='delete'){
deleteButton.removeAttribute('disabled');
    }
    else{
        deleteButton.setAttribute('disabled',true);
    }
})
document.getElementById('deleteButton').addEventListener('click',function(){
 const deletedtext=document.getElementById('deletedText');
 deletedtext.style.display='none';
})

**Event Bubble:

Event bubbling is a type of DOM event propagation where the event first triggers on the innermost target element, and then successively triggers on the ancestors of the target element in the same nesting hierarchy till it reaches the outermost DOM element or document object. Wikipedia


soja banglay: roomer vitor means basar vitor
               bashar vitor means elakar vitor
               elakar vitor mane sohorer vitor and so on....

exemple:
    document.getElementById('item-2').addEventListener('click',function(){
        console.log('item-2 clicked');
    })
    document.getElementById('list-ul').addEventListener('click',function(){
        console.log('list-ul clicked');
    })
    document.getElementById('ul-container').addEventListener('click',function(){
        console.log('ul-container clicked');
    })
propagation stop korte:
    document.getElementById('item-2').addEventListener('click',function(event){
        console.log('item-2 clicked');
        event.stopPropagation();
        event.stopImmediatePropagation();
    })

**Event delegate:

kono akta child e kono event add na kore tar parent container ke sei event ta delegate korle subidha hoilo notun aro child add hoile segulou sei event er property pabe.
 exemple:

     document.getElementById('ul-delegate').addEventListener('click',function(event){
        event.target.parentNode.removeChild(event.target);
    })
    const ulDelegate=document.getElementById('ul-delegate');
    document.getElementById('add-event').addEventListener('click',function(){
        const li=document.createElement('li');
        li.innerText='new item added';
ulDelegate.appendChild(li);

    })

